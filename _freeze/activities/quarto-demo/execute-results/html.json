{
  "hash": "8538700e4ec50d53ee32424716e310a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Activity 1\"\nformat:\n  html:\n    toc: true\n    toc-depth: 1\n    embed-resources: true\n---\n\n\n# Intro\n\n\n**Macalester College** is in the *Twin Cities*.\nIt has:\n\n- liberal arts education\n- strong intentional students body\n- four seasons and fun \n- bagpipes and Scottish heritage\n- a reputation for activism\n- a small campus in St. Paul, MN\n\n![MAC MAP](https://www.macalester.edu/about/wp-content/uploads/sites/191/2019/12/campusmap336.png)\n\n\n\n\\\n\\\n\n\n# Exercise 1: Deduce Quarto features\n\n`*`.  *this makes the writing italic*\n\n`**`.  **this makes the writing bold**\n\n`#`.  # this makes the writing in a headline - start a new title\n\n`-`   - this make a bullet point\n\n\n`\\`.       #This make a new line and add space\n\n`This is a test`.     # this create a cray highlight\n\n`![](url)`. #![The descrition of the image goes here]\n\n\n\n\\\n\\\n\\\n\n# Exercise 2: Code\n\n\nHow does this appear in the .qmd? The .html? So...?!\n\nseq(from = 100, to = 1000, by = 50)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseq(from = 100, to = 1000, by = 50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  100  150  200  250  300  350  400  450  500  550  600  650  700  750  800\n[16]  850  900  950 1000\n```\n\n\n:::\n:::\n\n\n\n\n\\\n\n\n# Exercise 3: Chunks\n\nQuarto isn't a mind reader -- we must distinguish R code from text.\nWe do so by putting code inside an **R chunk**:\n\n\n::: {.cell}\n\n:::\n\n\n- Put the `seq()` code in the chunk.\n- Press the green arrow in the top right of the chunk. What happens in the qmd?\n- Render. What appears in the html: R code, output, or both?\n\n\n\n\n\n\\\n\\\n\\\n\n\n\n\n# Exercise 4: Practice\n\n- Use R code to create the following sequence: 10 10 10 10\n- Store the sequence as `four_tens`.\n- Use an R function (which we haven't learned!) to add up the numbers in `four_tens`.\n\n\n\n\n\n\\\n\\\n\\\n\n\n\n\n# Exercise 5: Fix this code\n\nCode is a form of communication, and the code below doesn't cut it.\n\nPut the code in a chunk and fix it.\n\nRep(x = 1, times = 10)\nseq(from=100,to=1000,length=20)\ntheNumberofStudentsinthisclass<-27\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}